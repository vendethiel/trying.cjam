1{_W$<}{_'#*n)}w;;



Expects the number of iterations at the beginning of the stack.
1                  Pushes 1
   W$              The value on the bottom of the stack (W = -1).
 {_  <}        w   While the value on top of the stack is inferior to it...
       {_'#*n)}    Duplicate that value on top of the stack (which is the current iteration),
                   then add the character # and duplicates it times the iteration number.
                ;; Pop 2 values from the stack (the current one, the top one)
